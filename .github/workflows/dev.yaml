name: Deploy Sample API on DEV and QA

on:
  push:
    branches: [ development ]

env:
  IMAGE_URL: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-west-2.amazonaws.com/${{ secrets.AWS_ECR_REPO }}:${{ github.sha }}
  HARNESS_APP_ID: ${{ secrets.HARNESS_APP_ID }}

jobs:
  Build-and-Test:
    name: Build and Test Sample-api
    runs-on: [self-hosted, linux]
    steps:
      - name: Set up Go 1.17
        uses: actions/setup-go@v2
        with:
          go-version: 1.17
          id: Go

      - name: Checkout code into go module directory
        uses: actions/checkout@v2

      - name: Fetch dependencies
        run: |
          git config --global url."https://${{ secrets.PAT}}:x-oauth-basic@github-lvs.corpzone.internalzone.com/".insteadOf "https://github-lvs.corpzone.internalzone.com/"
          git config --global http.sslVerify false
          go get -v -t -d ./...

      - name: Test
        run: |
          export GOFR_ENV=test
          cd examples/sample-api
          mkdir build
          go test ./... -v

      - name: GolangCI-Lint
        run: |
          cd examples/sample-api
          golangci-lint run --timeout 5m0s

      - name: Build
        run: |
          cd examples/sample-api
          go build -tags musl -ldflags "-linkmode external" -o main

      - name: Upload binary to artifact
        uses: actions/upload-artifact@v2
        with:
          name: app-binary
          path: main
  scans :
    needs: Build-and-Test
    name: all scans
    runs-on: [self-hosted, Linux, X64]
    steps:
      - name: Sonar scan and upload report
        run: |
          export PATH=$PATH:/opt/sonarqube/sonar-runner/sonar-scanner-4.6.2.2472-linux/bin
          sonar-scanner \
               -Dsonar.password=${{ secrets.SONAR_PWD }}\
               -Dsonar.login=${{ secrets.SONAR_USER }}

      - name: Sonar scan browse url
        run: echo "http://10.95.114.134:9000/dashboard?id=cnsr-gofr"

      - name: Fortify Scan
        run: |
          export PATH=$PATH:/opt/fortify/fortify-base/bin
          sourceanalyzer -b 1 -scan -f scan.fpr
          BIRTReportGenerator -template "DISA STIG" -source scan.fpr -format PDF -output scan.pdf -showSuppressed -showHidden

      - name: Upload fortify
        uses: actions/upload-artifact@v2
        with:
          name: Fortify
          path: scan.pdf

  Dockerize:
    needs: scans
    runs-on: [self-hosted, linux]
    steps:
      - name: Set up Go 1.17
        uses: actions/setup-go@v2
        with:
          go-version: 1.17
          id: Go

      - name: Checkout code into go module directory
        uses: actions/checkout@v2

      - name: Download binary from artifact
        uses: actions/download-artifact@v2
        with:
          name: app-binary
          path: main

      - name: Build and Push docker image to AWS ECR
        uses: docker://ghcr.io/kciter/aws-ecr-action:latest
        with:
          access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          account_id: ${{ secrets.AWS_ACCOUNT_ID }}
          repo: ${{ secrets.AWS_ECR_REPO }}
          region: us-west-2
          dockerfile: ./Dockerfile
          path: .
          tags: ${{ github.sha }}

  Deploy-on-Dev:
    needs: Dockerize
    runs-on: [ self-hosted, linux ]
    steps:
      - name: Trigger harness pipeline for deployment on DEV environment
        run: |
          template='{"application":"%s","parameters":{"image":"%s"}}'
          jsonData=$( printf "$template" "$HARNESS_APP_ID" "$IMAGE_URL" )
          curl -X POST -H 'content-type: application/json' --url ${{ secrets.HARNESS_DEV_WEBHOOK_URL }} -d $jsonData

  Deploy-on-QA:
    needs: Dockerize
    runs-on: [ self-hosted, linux ]
    steps:
      - name: Trigger harness pipeline for deployment on QA environment
        run: |
          template='{"application":"%s","parameters":{"image":"%s"}}'
          jsonData=$( printf "$template" "$HARNESS_APP_ID" "$IMAGE_URL" )
          curl -X POST -H 'content-type: application/json' --url ${{ secrets.HARNESS_QA_WEBHOOK_URL }} -d $jsonData